/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET NAMES utf8 */;
/*!50503 SET NAMES utf8mb4 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;

CREATE DATABASE IF NOT EXISTS `FRAMEWORK` /*!40100 DEFAULT CHARACTER SET utf8mb4 */;
USE `FRAMEWORK`;

CREATE TABLE IF NOT EXISTS `BLOG` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `UID` bigint(25) DEFAULT NULL,
  `TITULO` varchar(255) DEFAULT NULL,
  `PREVIA` varchar(300) DEFAULT NULL,
  `DESCRICAO` text DEFAULT NULL,
  `IMAGEM` varchar(255) DEFAULT '',
  `FW_LANG` varchar(5) DEFAULT 'pt',
  `FW_UID_LANG` bigint(25) DEFAULT NULL,
  PRIMARY KEY (`ID`),
  KEY `FW_UID_LANG` (`FW_UID_LANG`)
) ENGINE=InnoDB AUTO_INCREMENT=65 DEFAULT CHARSET=utf8mb4;

/*!40000 ALTER TABLE `BLOG` DISABLE KEYS */;
/*!40000 ALTER TABLE `BLOG` ENABLE KEYS */;

CREATE TABLE IF NOT EXISTS `BLOG__TRANSLATE` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `FW_LANG` varchar(5) DEFAULT 'pt',
  `ID_FW_PAI` int(11) DEFAULT NULL,
  `FW_UID_LANG` bigint(25) DEFAULT NULL,
  `UID` bigint(25) DEFAULT NULL,
  `TITULO` varchar(255) DEFAULT NULL,
  `PREVIA` varchar(300) DEFAULT NULL,
  `DESCRICAO` text DEFAULT NULL,
  `IMAGEM` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE KEY `UNIQUE_FW_LANG` (`FW_LANG`,`FW_UID_LANG`)
) ENGINE=InnoDB AUTO_INCREMENT=97 DEFAULT CHARSET=utf8mb4;

/*!40000 ALTER TABLE `BLOG__TRANSLATE` DISABLE KEYS */;
/*!40000 ALTER TABLE `BLOG__TRANSLATE` ENABLE KEYS */;

SET @OLDTMP_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_ZERO_IN_DATE,NO_ZERO_DATE,NO_ENGINE_SUBSTITUTION';
DELIMITER //
CREATE TRIGGER `BLOG__SECURITY_DELETE` BEFORE DELETE ON `BLOG__TRANSLATE` FOR EACH ROW BEGIN
		DECLARE mensagem_erro VARCHAR(255);
		SET mensagem_erro = '0';
		IF @permitir_atualizacao=1 THEN 
			SET mensagem_erro = '';
		ELSE
			SET mensagem_erro = 'ATENÇÃO! Faça alterações APENAS pela tabela principal.';
			SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = mensagem_erro;
		END IF;
	END//
DELIMITER ;
SET SQL_MODE=@OLDTMP_SQL_MODE;

SET @OLDTMP_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_ZERO_IN_DATE,NO_ZERO_DATE,NO_ENGINE_SUBSTITUTION';
DELIMITER //
CREATE TRIGGER `BLOG__SECURITY_INSERT` BEFORE INSERT ON `BLOG__TRANSLATE` FOR EACH ROW BEGIN		DECLARE mensagem_erro VARCHAR(255);
		SET mensagem_erro = '0';
		IF @permitir_atualizacao=1 THEN 
			SET mensagem_erro = '';
		ELSE
			SET mensagem_erro = 'ATENÇÃO! Faça alterações APENAS pela tabela principal.';
			SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = mensagem_erro;
		END IF;
	END//
DELIMITER ;
SET SQL_MODE=@OLDTMP_SQL_MODE;

SET @OLDTMP_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_ZERO_IN_DATE,NO_ZERO_DATE,NO_ENGINE_SUBSTITUTION';
DELIMITER //
CREATE TRIGGER `BLOG__SECURITY_UPDATE` BEFORE UPDATE ON `BLOG__TRANSLATE` FOR EACH ROW BEGIN		DECLARE mensagem_erro VARCHAR(255);
		SET mensagem_erro = '0';
		IF @permitir_atualizacao=1 THEN 
			SET mensagem_erro = '';
		ELSE
			SET mensagem_erro = 'ATENÇÃO! Faça alterações APENAS pela tabela principal.';
			SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = mensagem_erro;
		END IF;
	END//
DELIMITER ;
SET SQL_MODE=@OLDTMP_SQL_MODE;

SET @OLDTMP_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_ZERO_IN_DATE,NO_ZERO_DATE,NO_ENGINE_SUBSTITUTION';
DELIMITER //
CREATE TRIGGER `DELETE__BLOG` AFTER DELETE ON `BLOG` FOR EACH ROW BEGIN 
	SET @permitir_atualizacao=1;
	DELETE FROM BLOG__TRANSLATE WHERE FW_UID_LANG=OLD.FW_UID_LANG; 
	END//
DELIMITER ;
SET SQL_MODE=@OLDTMP_SQL_MODE;

SET @OLDTMP_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_ZERO_IN_DATE,NO_ZERO_DATE,NO_ENGINE_SUBSTITUTION';
DELIMITER //
CREATE TRIGGER `INSERT_PRIMARY__BLOG` AFTER INSERT ON `BLOG` FOR EACH ROW BEGIN
		SET @permitir_atualizacao = 1;
		SET @atualiza_id = 1;
		UPDATE BLOG__TRANSLATE SET ID_FW_PAI=NEW.ID WHERE(FW_UID_LANG=NEW.FW_UID_LANG);
	END//
DELIMITER ;
SET SQL_MODE=@OLDTMP_SQL_MODE;

SET @OLDTMP_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_ZERO_IN_DATE,NO_ZERO_DATE,NO_ENGINE_SUBSTITUTION';
DELIMITER //
CREATE TRIGGER `INSERT__BLOG` BEFORE INSERT ON `BLOG` FOR EACH ROW BEGIN
		SET @permitir_atualizacao= 1;
		SET new.FW_UID_LANG=UUID_SHORT();
			INSERT INTO BLOG__TRANSLATE (FW_UID_LANG, FW_LANG) VALUES (NEW.FW_UID_LANG, 'pt');
			INSERT INTO BLOG__TRANSLATE (FW_UID_LANG, FW_LANG) VALUES (NEW.FW_UID_LANG, 'en');
			INSERT INTO BLOG__TRANSLATE (FW_UID_LANG, FW_LANG) VALUES (NEW.FW_UID_LANG, 'es');

			UPDATE BLOG__TRANSLATE SET UID=NEW.UID,TITULO=NEW.TITULO,PREVIA=NEW.PREVIA,DESCRICAO=NEW.DESCRICAO,IMAGEM=NEW.IMAGEM WHERE FW_UID_LANG = new.FW_UID_LANG AND FW_LANG=NEW.FW_LANG; 
			SET NEW.UID=DEFAULT;
			SET NEW.TITULO=DEFAULT;
			SET NEW.PREVIA=DEFAULT;
			SET NEW.DESCRICAO=DEFAULT;
			SET NEW.IMAGEM=DEFAULT;
	END//
DELIMITER ;
SET SQL_MODE=@OLDTMP_SQL_MODE;

SET @OLDTMP_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_ZERO_IN_DATE,NO_ZERO_DATE,NO_ENGINE_SUBSTITUTION';
DELIMITER //
CREATE TRIGGER `UPDATE__BLOG` BEFORE UPDATE ON `BLOG` FOR EACH ROW BEGIN
			DECLARE record_count INT;
		IF @atualiza_id = 1 THEN
			SET @atualiza_id = 0;
		ELSE

				SET @permitir_atualizacao = 1;
				SELECT COUNT(*) INTO @record_count FROM BLOG__TRANSLATE WHERE FW_UID_LANG=NEW.FW_UID_LANG AND FW_LANG=NEW.FW_LANG;
				IF @record_count > 0 THEN
					UPDATE BLOG__TRANSLATE SET 
UID=IF(NEW.UID IS NULL , UID, NEW.UID)
,TITULO=IF(NEW.TITULO IS NULL , TITULO, NEW.TITULO)
,PREVIA=IF(NEW.PREVIA IS NULL , PREVIA, NEW.PREVIA)
,DESCRICAO=IF(NEW.DESCRICAO IS NULL , DESCRICAO, NEW.DESCRICAO)
,IMAGEM=IF(NEW.IMAGEM IS NULL , IMAGEM, NEW.IMAGEM)
 WHERE FW_UID_LANG=NEW.FW_UID_LANG AND FW_LANG=NEW.FW_LANG; 
			ELSE
				INSERT INTO BLOG__TRANSLATE ( ID,UID,TITULO,PREVIA,DESCRICAO,IMAGEM, FW_UID_LANG, FW_LANG) VALUES ( NEW.ID,NEW.UID,NEW.TITULO,NEW.PREVIA,NEW.DESCRICAO,NEW.IMAGEM,NEW.FW_UID_LANG, NEW.FW_LANG);
			END IF;
			SET NEW.UID=NULL;
			SET NEW.TITULO=NULL;
			SET NEW.PREVIA=NULL;
			SET NEW.DESCRICAO=NULL;
			SET NEW.IMAGEM=NULL;
			END IF;

		END//
DELIMITER ;
SET SQL_MODE=@OLDTMP_SQL_MODE;

/*!40101 SET SQL_MODE=IFNULL(@OLD_SQL_MODE, '') */;
/*!40014 SET FOREIGN_KEY_CHECKS=IF(@OLD_FOREIGN_KEY_CHECKS IS NULL, 1, @OLD_FOREIGN_KEY_CHECKS) */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
